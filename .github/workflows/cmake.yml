name: CMake Build Matrix

on: 
  push:
  pull_request:
  release:
    # tags:
    # - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config: 
        - {
            name: "Windows Latest MSVC",
            os: windows-latest,
            build_type: "Debug",
            cc: "cl",
            cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat",
            generators: "Visual Studio 16 2019"
          }
        - {
            name: "Ubuntu Latest GCC",
            os: ubuntu-latest,
            build_type: "Debug",
            cc: "gcc",
            cxx: "g++",
            generators: "Ninja"
          }
        - {
            name: "macOS Latest Clang",
            os: macos-latest,
            build_type: "Debug",
            cc: "clang",
            cxx: "clang++",
            generators: "Xcode"
          }

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
      - name: Install dependencies on windows
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version

      - name: Install dependencies on ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu Latest GCC')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          gcc --version
      - name: Install dependencies on macos
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install cmake ninja
          ninja --version
          cmake --version
          
      - name: Configure
        shell: bash
        run: |
          mkdir build
          cmake \
            -S . \
            -B build \
            -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
            -G "${{ matrix.config.generators }}"

      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.config.build_type }}

      - name: Run tests on Windows
        if: startsWith(matrix.config.os, 'windows')
        shell: bash
        run: |
          status=$?
          cmd="build/bin/${{ matrix.config.build_type }}/simple_example.exe"
          $cmd
          status=$?
          [ $status -eq 0 ] && exit 0 || exit 1
          
      - name: Run tests on macos
        if: startsWith(matrix.config.os, 'macos')
        shell: bash
        run: |
          status=$?
          cmd="build/tests/${{ matrix.config.build_type }}/unit_tests"
          echo $cmd
          status=$?
          [ $status -eq 0 ] && exit 0 || exit 1
        
      - name: Run tests on Ubuntu
        if: startsWith(matrix.config.name, 'Ubuntu Latest GCC')
        shell: bash
        run: |
          status=$?
          cmd="./build/tests/unit_tests"
          echo $cmd
          status=$?
          [ $status -eq 0 ] && exit 0 || exit 1
